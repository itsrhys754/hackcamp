{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst winston_1 = require(\"winston\");\nconst {\n  combine,\n  timestamp,\n  label,\n  printf\n} = winston_1.format;\nconst logging_winston_1 = require(\"@google-cloud/logging-winston\");\nconst ConfigLoader_1 = __importDefault(require(\"./ConfigLoader\"));\nconst env = process.env.NODE_ENV || 'development';\nvar LOGGING_LEVELS;\n(function (LOGGING_LEVELS) {\n  LOGGING_LEVELS[\"ERROR\"] = \"error\";\n  LOGGING_LEVELS[\"INFO\"] = \"info\";\n  LOGGING_LEVELS[\"DEBUG\"] = \"debug\";\n})(LOGGING_LEVELS || (LOGGING_LEVELS = {}));\nclass Logger {\n  constructor(logLabel) {\n    this.format = printf(({\n      level,\n      message,\n      label,\n      timestamp\n    }) => {\n      return `${timestamp} [${label}] ${level}: ${message} `;\n    });\n    this.logLabel = logLabel;\n  }\n  get logger() {\n    if (!this._logger) {\n      try {\n        switch ((0, ConfigLoader_1.default)().LOGGING_MODE) {\n          case 'GCP':\n            this._logger = this.getGCPLogger();\n            break;\n          default:\n            this._logger = this.getDefaultLogger(this.logLabel);\n        }\n      } catch (error) {\n        this._logger = this.getDefaultLogger(this.logLabel).error(error);\n      }\n    }\n    return this._logger;\n  }\n  getGCPLogger() {\n    return (0, winston_1.createLogger)({\n      level: this.getLogLevel(env),\n      transports: [new winston_1.transports.Console(), new logging_winston_1.LoggingWinston()],\n      silent: env === 'test'\n    });\n  }\n  getDefaultLogger(logLabel) {\n    return (0, winston_1.createLogger)({\n      level: this.getLogLevel(env),\n      format: combine(label({\n        label: logLabel\n      }), timestamp(), this.format),\n      transports: [new winston_1.transports.Console({\n        format: winston_1.format.combine(winston_1.format.colorize(), this.format)\n      }), new winston_1.transports.File({\n        filename: 'logs/error.log',\n        level: LOGGING_LEVELS.ERROR\n      }), new winston_1.transports.File({\n        filename: 'logs/combined.log'\n      })],\n      silent: env === 'test'\n    });\n  }\n  getLogLevel(env) {\n    if (env === 'test' || env === 'development') {\n      return LOGGING_LEVELS.DEBUG;\n    }\n    return LOGGING_LEVELS.INFO;\n  }\n  debug(message) {\n    this.logger.debug(message);\n  }\n  info(message) {\n    this.logger.info(message);\n  }\n  warn(message) {\n    this.logger.warn(message);\n  }\n  error(message, error) {\n    this.logger.error(message + error.stack);\n  }\n}\nexports.default = Logger;","map":{"version":3,"names":["winston_1","require","combine","timestamp","label","printf","format","logging_winston_1","ConfigLoader_1","__importDefault","env","process","NODE_ENV","LOGGING_LEVELS","Logger","constructor","logLabel","level","message","logger","_logger","default","LOGGING_MODE","getGCPLogger","getDefaultLogger","error","createLogger","getLogLevel","transports","Console","LoggingWinston","silent","colorize","File","filename","ERROR","DEBUG","INFO","debug","info","warn","stack","exports"],"sources":["/Users/rhysgregory/node_modules/@cloud-carbon-footprint/common/src/Logger.ts"],"sourcesContent":["/*\n * Â© 2021 Thoughtworks, Inc.\n */\n\nimport {\n  createLogger,\n  format,\n  transports,\n  Logger as WinstonLogger,\n} from 'winston'\nconst { combine, timestamp, label, printf } = format\nimport { LoggingWinston } from '@google-cloud/logging-winston'\n\nimport ILogger from './ILogger'\nimport configLoader from './ConfigLoader'\n\nconst env = process.env.NODE_ENV || 'development'\n\nenum LOGGING_LEVELS {\n  ERROR = 'error',\n  INFO = 'info',\n  DEBUG = 'debug',\n}\n\nexport default class Logger implements ILogger {\n  private _logger: WinstonLogger\n  private logLabel: string\n\n  private readonly format = printf(({ level, message, label, timestamp }) => {\n    return `${timestamp} [${label}] ${level}: ${message} `\n  })\n\n  constructor(logLabel: string) {\n    this.logLabel = logLabel\n  }\n\n  get logger() {\n    if (!this._logger) {\n      try {\n        switch (configLoader().LOGGING_MODE) {\n          case 'GCP':\n            this._logger = this.getGCPLogger()\n            break\n          default:\n            this._logger = this.getDefaultLogger(this.logLabel)\n        }\n      } catch (error) {\n        this._logger = this.getDefaultLogger(this.logLabel).error(error)\n      }\n    }\n\n    return this._logger\n  }\n\n  private getGCPLogger() {\n    return createLogger({\n      level: this.getLogLevel(env),\n      transports: [new transports.Console(), new LoggingWinston()],\n      silent: env === 'test',\n    })\n  }\n\n  private getDefaultLogger(logLabel: string) {\n    return createLogger({\n      level: this.getLogLevel(env),\n      format: combine(label({ label: logLabel }), timestamp(), this.format),\n      transports: [\n        new transports.Console({\n          format: format.combine(format.colorize(), this.format),\n        }),\n        new transports.File({\n          filename: 'logs/error.log',\n          level: LOGGING_LEVELS.ERROR,\n        }),\n        new transports.File({ filename: 'logs/combined.log' }),\n      ],\n      silent: env === 'test',\n    })\n  }\n\n  private getLogLevel(env: string): string {\n    if (env === 'test' || env === 'development') {\n      return LOGGING_LEVELS.DEBUG\n    }\n    return LOGGING_LEVELS.INFO\n  }\n\n  debug(message: string): void {\n    this.logger.debug(message)\n  }\n\n  info(message: string): void {\n    this.logger.info(message)\n  }\n\n  warn(message: string): void {\n    this.logger.warn(message)\n  }\n\n  error(message: string, error: Error): void {\n    this.logger.error(message + error.stack)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}