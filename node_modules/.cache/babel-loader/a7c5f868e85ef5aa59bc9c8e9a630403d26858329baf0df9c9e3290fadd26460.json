{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GroupBy = void 0;\nconst fs_1 = __importDefault(require(\"fs\"));\nconst dotenv_1 = __importDefault(require(\"dotenv\"));\nconst RecommendationsService_1 = require(\"./RecommendationsService\");\ndotenv_1.default.config();\nvar GroupBy;\n(function (GroupBy) {\n  GroupBy[\"day\"] = \"day\";\n  GroupBy[\"week\"] = \"week\";\n  GroupBy[\"month\"] = \"month\";\n  GroupBy[\"quarter\"] = \"quarter\";\n  GroupBy[\"year\"] = \"year\";\n})(GroupBy = exports.GroupBy || (exports.GroupBy = {}));\nconst checkAthenaRegionISAWSGlobal = athena_region => {\n  const AWS_CN_REGIONS = ['cn-north-1', 'cn-northwest-1'];\n  return !AWS_CN_REGIONS.includes(athena_region);\n};\nconst getAWSAccounts = () => {\n  return process.env.AWS_ACCOUNTS ? process.env.AWS_ACCOUNTS : '[]';\n};\nconst getAWSResourceTagNames = () => {\n  return process.env.AWS_RESOURCE_TAG_NAMES ? process.env.AWS_RESOURCE_TAG_NAMES : '[]';\n};\nconst getGCPResourceTagNames = () => {\n  return process.env.GCP_RESOURCE_TAG_NAMES ? process.env.GCP_RESOURCE_TAG_NAMES : '[]';\n};\nconst getAzureResourceTagNames = () => {\n  return process.env.AZURE_RESOURCE_TAG_NAMES ? process.env.AZURE_RESOURCE_TAG_NAMES : '[]';\n};\nconst getGCPProjects = () => {\n  return process.env.GCP_PROJECTS ? process.env.GCP_PROJECTS : '[]';\n};\nconst getAzureSubscriptions = () => {\n  return process.env.AZURE_SUBSCRIPTIONS ? process.env.AZURE_SUBSCRIPTIONS : '[]';\n};\nconst getEnvVar = envVar => {\n  try {\n    return fs_1.default.readFileSync(`/run/secrets/${envVar}`, 'utf8').replace('\\n', '');\n  } catch (err) {\n    return process.env[envVar];\n  }\n};\nconst getConfig = () => ({\n  AWS: {\n    INCLUDE_ESTIMATES: process.env.AWS_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA: !!process.env.AWS_USE_BILLING_DATA && process.env.AWS_USE_BILLING_DATA !== 'false',\n    BILLING_ACCOUNT_ID: getEnvVar('AWS_BILLING_ACCOUNT_ID') || '',\n    BILLING_ACCOUNT_NAME: getEnvVar('AWS_BILLING_ACCOUNT_NAME') || '',\n    ATHENA_DB_NAME: getEnvVar('AWS_ATHENA_DB_NAME') || '',\n    ATHENA_DB_TABLE: getEnvVar('AWS_ATHENA_DB_TABLE') || '',\n    ATHENA_QUERY_RESULT_LOCATION: getEnvVar('AWS_ATHENA_QUERY_RESULT_LOCATION') || '',\n    ATHENA_REGION: getEnvVar('AWS_ATHENA_REGION'),\n    IS_AWS_GLOBAL: checkAthenaRegionISAWSGlobal(getEnvVar('AWS_ATHENA_REGION')),\n    accounts: JSON.parse(getAWSAccounts()) || [],\n    authentication: {\n      mode: getEnvVar('AWS_AUTH_MODE') || 'default',\n      options: {\n        targetRoleName: getEnvVar('AWS_TARGET_ACCOUNT_ROLE_NAME'),\n        proxyAccountId: getEnvVar('AWS_PROXY_ACCOUNT_ID') || '',\n        proxyRoleName: getEnvVar('AWS_PROXY_ROLE_NAME') || ''\n      }\n    },\n    NAME: 'AWS',\n    RECOMMENDATIONS_SERVICE: RecommendationsService_1.AWS_RECOMMENDATIONS_SERVICES[getEnvVar('AWS_RECOMMENDATIONS_SERVICE')],\n    COMPUTE_OPTIMIZER_BUCKET: getEnvVar('AWS_COMPUTE_OPTIMIZER_BUCKET') || '',\n    RESOURCE_TAG_NAMES: JSON.parse(getAWSResourceTagNames()),\n    CURRENT_REGIONS: ['us-east-1', 'us-east-2', 'us-west-1', 'us-west-2', 'ap-south-1', 'ap-northeast-2', 'ap-southeast-1', 'ap-southeast-2', 'ap-northeast-1', 'ca-central-1', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'eu-west-3', 'eu-north-1', 'sa-east-1'],\n    CURRENT_SERVICES: [{\n      key: 'ebs',\n      name: 'EBS'\n    }, {\n      key: 's3',\n      name: 'S3'\n    }, {\n      key: 'ec2',\n      name: 'EC2'\n    }, {\n      key: 'elasticache',\n      name: 'ElastiCache'\n    }, {\n      key: 'rds',\n      name: 'RDS'\n    }, {\n      key: 'lambda',\n      name: 'Lambda'\n    }]\n  },\n  GCP: {\n    projects: JSON.parse(getGCPProjects()) || [],\n    NAME: 'GCP',\n    CURRENT_REGIONS: ['us-east1', 'us-central1', 'us-west1'],\n    CURRENT_SERVICES: [{\n      key: 'computeEngine',\n      name: 'ComputeEngine'\n    }],\n    USE_CARBON_FREE_ENERGY_PERCENTAGE: !!process.env.GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE && process.env.GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE !== 'false',\n    INCLUDE_ESTIMATES: process.env.GCP_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA: !!process.env.GCP_USE_BILLING_DATA && process.env.GCP_USE_BILLING_DATA !== 'false',\n    VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT: parseFloat(getEnvVar('GCP_VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT')) || 14,\n    VCPUS_PER_GKE_CLUSTER: parseFloat(getEnvVar('GCP_VCPUS_PER_GKE_CLUSTER')) || 3,\n    BIG_QUERY_TABLE: getEnvVar('GCP_BIG_QUERY_TABLE') || '',\n    BILLING_PROJECT_ID: getEnvVar('GCP_BILLING_PROJECT_ID') || '',\n    BILLING_PROJECT_NAME: getEnvVar('GCP_BILLING_PROJECT_NAME') || '',\n    CACHE_BUCKET_NAME: getEnvVar('GCS_CACHE_BUCKET_NAME') || '',\n    RESOURCE_TAG_NAMES: JSON.parse(getGCPResourceTagNames())\n  },\n  AZURE: {\n    INCLUDE_ESTIMATES: process.env.AZURE_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA: !!process.env.AZURE_USE_BILLING_DATA && process.env.AZURE_USE_BILLING_DATA !== 'false',\n    authentication: {\n      mode: getEnvVar('AZURE_AUTH_MODE') || 'default',\n      clientId: getEnvVar('AZURE_CLIENT_ID') || '',\n      clientSecret: getEnvVar('AZURE_CLIENT_SECRET') || '',\n      tenantId: getEnvVar('AZURE_TENANT_ID') || ''\n    },\n    RESOURCE_TAG_NAMES: JSON.parse(getAzureResourceTagNames()),\n    CONSUMPTION_CHUNKS_DAYS: parseInt(getEnvVar('AZURE_CONSUMPTION_CHUNKS_DAYS') || '0'),\n    SUBSCRIPTION_CHUNKS: parseInt(getEnvVar('AZURE_SUBSCRIPTION_CHUNKS') || '10'),\n    SUBSCRIPTIONS: JSON.parse(getAzureSubscriptions()) || []\n  },\n  ALI: {\n    NAME: 'AliCloud',\n    INCLUDE_ESTIMATES: process.env.ALI_INCLUDE_ESTIMATES !== 'false',\n    authentication: {\n      accessKeyId: process.env.ALI_ACCESS_KEY,\n      accessKeySecret: process.env.ALI_ACCESS_SECRET\n    }\n  },\n  LOGGING_MODE: process.env.LOGGING_MODE || '',\n  CACHE_MODE: getEnvVar('CACHE_MODE') || '',\n  ON_PREMISE: {\n    SERVER: {\n      CPU_UTILIZATION: parseFloat(getEnvVar('ON_PREMISE_CPU_UTILIZATION_SERVER')),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_SERVER'))\n    },\n    LAPTOP: {\n      CPU_UTILIZATION: parseFloat(getEnvVar('ON_PREMISE_CPU_UTILIZATION_LAPTOP')),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_LAPTOP'))\n    },\n    DESKTOP: {\n      CPU_UTILIZATION: parseFloat(getEnvVar('ON_PREMISE_CPU_UTILIZATION_DESKTOP')),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_DESKTOP'))\n    }\n  },\n  MONGODB: {\n    URI: getEnvVar('MONGODB_URI') || '',\n    CREDENTIALS: getEnvVar('MONGODB_CREDENTIALS') || ''\n  },\n  ELECTRICITY_MAPS_TOKEN: getEnvVar('ELECTRICITY_MAPS_TOKEN') || ''\n});\nexports.default = getConfig;","map":{"version":3,"names":["fs_1","__importDefault","require","dotenv_1","RecommendationsService_1","default","config","GroupBy","exports","checkAthenaRegionISAWSGlobal","athena_region","AWS_CN_REGIONS","includes","getAWSAccounts","process","env","AWS_ACCOUNTS","getAWSResourceTagNames","AWS_RESOURCE_TAG_NAMES","getGCPResourceTagNames","GCP_RESOURCE_TAG_NAMES","getAzureResourceTagNames","AZURE_RESOURCE_TAG_NAMES","getGCPProjects","GCP_PROJECTS","getAzureSubscriptions","AZURE_SUBSCRIPTIONS","getEnvVar","envVar","readFileSync","replace","err","getConfig","AWS","INCLUDE_ESTIMATES","AWS_INCLUDE_ESTIMATES","USE_BILLING_DATA","AWS_USE_BILLING_DATA","BILLING_ACCOUNT_ID","BILLING_ACCOUNT_NAME","ATHENA_DB_NAME","ATHENA_DB_TABLE","ATHENA_QUERY_RESULT_LOCATION","ATHENA_REGION","IS_AWS_GLOBAL","accounts","JSON","parse","authentication","mode","options","targetRoleName","proxyAccountId","proxyRoleName","NAME","RECOMMENDATIONS_SERVICE","AWS_RECOMMENDATIONS_SERVICES","COMPUTE_OPTIMIZER_BUCKET","RESOURCE_TAG_NAMES","CURRENT_REGIONS","CURRENT_SERVICES","key","name","GCP","projects","USE_CARBON_FREE_ENERGY_PERCENTAGE","GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE","GCP_INCLUDE_ESTIMATES","GCP_USE_BILLING_DATA","VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT","parseFloat","VCPUS_PER_GKE_CLUSTER","BIG_QUERY_TABLE","BILLING_PROJECT_ID","BILLING_PROJECT_NAME","CACHE_BUCKET_NAME","AZURE","AZURE_INCLUDE_ESTIMATES","AZURE_USE_BILLING_DATA","clientId","clientSecret","tenantId","CONSUMPTION_CHUNKS_DAYS","parseInt","SUBSCRIPTION_CHUNKS","SUBSCRIPTIONS","ALI","ALI_INCLUDE_ESTIMATES","accessKeyId","ALI_ACCESS_KEY","accessKeySecret","ALI_ACCESS_SECRET","LOGGING_MODE","CACHE_MODE","ON_PREMISE","SERVER","CPU_UTILIZATION","AVERAGE_WATTS","LAPTOP","DESKTOP","MONGODB","URI","CREDENTIALS","ELECTRICITY_MAPS_TOKEN"],"sources":["/Users/rhysgregory/node_modules/@cloud-carbon-footprint/common/src/Config.ts"],"sourcesContent":["/*\n * Â© 2021 Thoughtworks, Inc.\n */\nimport fs from 'fs'\nimport dotenv from 'dotenv'\nimport { AWS_RECOMMENDATIONS_SERVICES } from './RecommendationsService'\n\ndotenv.config()\n\nexport interface CCFConfig {\n  AWS?: {\n    INCLUDE_ESTIMATES?: boolean\n    USE_BILLING_DATA?: boolean\n    BILLING_ACCOUNT_ID?: string\n    BILLING_ACCOUNT_NAME?: string\n    ATHENA_DB_NAME?: string\n    ATHENA_DB_TABLE?: string\n    ATHENA_QUERY_RESULT_LOCATION?: string\n    ATHENA_REGION?: string\n    IS_AWS_GLOBAL?: boolean\n    NAME?: string\n    RECOMMENDATIONS_SERVICE?: AWS_RECOMMENDATIONS_SERVICES\n    COMPUTE_OPTIMIZER_BUCKET?: string\n    CURRENT_SERVICES?: { key: string; name: string }[]\n    CURRENT_REGIONS?: string[]\n    RESOURCE_TAG_NAMES?: string[]\n    accounts?: AWSAccount[]\n    authentication?: {\n      mode: string\n      options?: Record<string, string>\n    }\n  }\n  GCP?: {\n    NAME?: string\n    CURRENT_SERVICES?: { key: string; name: string }[]\n    CURRENT_REGIONS?: string[]\n    projects?: {\n      id: string\n      name?: string\n    }[]\n    USE_CARBON_FREE_ENERGY_PERCENTAGE?: boolean\n    INCLUDE_ESTIMATES?: boolean\n    USE_BILLING_DATA?: boolean\n    BIG_QUERY_TABLE?: string\n    BILLING_PROJECT_ID?: string\n    BILLING_PROJECT_NAME?: string\n    CACHE_BUCKET_NAME?: string\n    VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT?: number\n    VCPUS_PER_GKE_CLUSTER?: number\n    RESOURCE_TAG_NAMES?: string[]\n  }\n  AZURE?: {\n    INCLUDE_ESTIMATES?: boolean\n    USE_BILLING_DATA?: boolean\n    authentication?: {\n      mode: string\n      clientId?: string\n      clientSecret?: string\n      tenantId?: string\n    }\n    RESOURCE_TAG_NAMES?: string[]\n    CONSUMPTION_CHUNKS_DAYS?: number\n    SUBSCRIPTION_CHUNKS?: number\n    SUBSCRIPTIONS: string[]\n  }\n  ALI?: {\n    NAME?: string\n    INCLUDE_ESTIMATES?: boolean\n    authentication?: {\n      accessKeyId: string\n      accessKeySecret: string\n    }\n  }\n  LOGGING_MODE?: string\n  CACHE_MODE?: string\n  ON_PREMISE?: {\n    SERVER?: {\n      CPU_UTILIZATION?: number\n      AVERAGE_WATTS?: number\n    }\n    LAPTOP?: {\n      CPU_UTILIZATION?: number\n      AVERAGE_WATTS?: number\n    }\n    DESKTOP?: {\n      CPU_UTILIZATION?: number\n      AVERAGE_WATTS?: number\n    }\n  }\n  MONGODB?: {\n    URI?: string\n    CREDENTIALS?: string\n  }\n  ELECTRICITY_MAPS_TOKEN?: string\n}\n\nexport interface AWSAccount {\n  id: string\n  name?: string\n}\n\nexport enum GroupBy {\n  day = 'day',\n  week = 'week',\n  month = 'month',\n  quarter = 'quarter',\n  year = 'year',\n}\n\nexport type QUERY_DATE_TYPES = {\n  [key in GroupBy]: string\n}\n\n// this check allows for aws auth to determine how to correctly partition by region when credentializing\nconst checkAthenaRegionISAWSGlobal = (athena_region: string): boolean => {\n  const AWS_CN_REGIONS = ['cn-north-1', 'cn-northwest-1']\n  return !AWS_CN_REGIONS.includes(athena_region)\n}\n\nconst getAWSAccounts = () => {\n  return process.env.AWS_ACCOUNTS ? process.env.AWS_ACCOUNTS : '[]'\n}\n\nconst getAWSResourceTagNames = () => {\n  return process.env.AWS_RESOURCE_TAG_NAMES\n    ? process.env.AWS_RESOURCE_TAG_NAMES\n    : '[]'\n}\n\nconst getGCPResourceTagNames = () => {\n  return process.env.GCP_RESOURCE_TAG_NAMES\n    ? process.env.GCP_RESOURCE_TAG_NAMES\n    : '[]'\n}\n\nconst getAzureResourceTagNames = () => {\n  return process.env.AZURE_RESOURCE_TAG_NAMES\n    ? process.env.AZURE_RESOURCE_TAG_NAMES\n    : '[]'\n}\n\nconst getGCPProjects = () => {\n  return process.env.GCP_PROJECTS ? process.env.GCP_PROJECTS : '[]'\n}\n\nconst getAzureSubscriptions = () => {\n  return process.env.AZURE_SUBSCRIPTIONS\n    ? process.env.AZURE_SUBSCRIPTIONS\n    : '[]'\n}\n\n// This function allows support for using Docker Secrets.\nconst getEnvVar = (envVar: string): string => {\n  try {\n    return fs.readFileSync(`/run/secrets/${envVar}`, 'utf8').replace('\\n', '')\n  } catch (err) {\n    return process.env[envVar]\n  }\n}\n\nconst getConfig = (): CCFConfig => ({\n  AWS: {\n    INCLUDE_ESTIMATES: process.env.AWS_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA:\n      !!process.env.AWS_USE_BILLING_DATA &&\n      process.env.AWS_USE_BILLING_DATA !== 'false',\n    BILLING_ACCOUNT_ID: getEnvVar('AWS_BILLING_ACCOUNT_ID') || '',\n    BILLING_ACCOUNT_NAME: getEnvVar('AWS_BILLING_ACCOUNT_NAME') || '',\n    ATHENA_DB_NAME: getEnvVar('AWS_ATHENA_DB_NAME') || '',\n    ATHENA_DB_TABLE: getEnvVar('AWS_ATHENA_DB_TABLE') || '',\n    ATHENA_QUERY_RESULT_LOCATION:\n      getEnvVar('AWS_ATHENA_QUERY_RESULT_LOCATION') || '',\n    ATHENA_REGION: getEnvVar('AWS_ATHENA_REGION'),\n    IS_AWS_GLOBAL: checkAthenaRegionISAWSGlobal(getEnvVar('AWS_ATHENA_REGION')),\n    accounts: JSON.parse(getAWSAccounts()) || [],\n    authentication: {\n      mode: getEnvVar('AWS_AUTH_MODE') || 'default',\n      options: {\n        targetRoleName: getEnvVar('AWS_TARGET_ACCOUNT_ROLE_NAME'),\n        proxyAccountId: getEnvVar('AWS_PROXY_ACCOUNT_ID') || '',\n        proxyRoleName: getEnvVar('AWS_PROXY_ROLE_NAME') || '',\n      },\n    },\n    NAME: 'AWS',\n    RECOMMENDATIONS_SERVICE:\n      AWS_RECOMMENDATIONS_SERVICES[\n        getEnvVar('AWS_RECOMMENDATIONS_SERVICE') as AWS_RECOMMENDATIONS_SERVICES\n      ],\n    COMPUTE_OPTIMIZER_BUCKET: getEnvVar('AWS_COMPUTE_OPTIMIZER_BUCKET') || '',\n    RESOURCE_TAG_NAMES: JSON.parse(getAWSResourceTagNames()),\n    CURRENT_REGIONS: [\n      'us-east-1',\n      'us-east-2',\n      'us-west-1',\n      'us-west-2',\n      'ap-south-1',\n      'ap-northeast-2',\n      'ap-southeast-1',\n      'ap-southeast-2',\n      'ap-northeast-1',\n      'ca-central-1',\n      'eu-central-1',\n      'eu-west-1',\n      'eu-west-2',\n      'eu-west-3',\n      'eu-north-1',\n      'sa-east-1',\n    ],\n    CURRENT_SERVICES: [\n      {\n        key: 'ebs',\n        name: 'EBS',\n      },\n      {\n        key: 's3',\n        name: 'S3',\n      },\n      {\n        key: 'ec2',\n        name: 'EC2',\n      },\n      {\n        key: 'elasticache',\n        name: 'ElastiCache',\n      },\n      {\n        key: 'rds',\n        name: 'RDS',\n      },\n      {\n        key: 'lambda',\n        name: 'Lambda',\n      },\n    ],\n  },\n  GCP: {\n    projects: JSON.parse(getGCPProjects()) || [],\n    NAME: 'GCP',\n    CURRENT_REGIONS: ['us-east1', 'us-central1', 'us-west1'],\n    CURRENT_SERVICES: [\n      {\n        key: 'computeEngine',\n        name: 'ComputeEngine',\n      },\n    ],\n    USE_CARBON_FREE_ENERGY_PERCENTAGE:\n      !!process.env.GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE &&\n      process.env.GCP_USE_CARBON_FREE_ENERGY_PERCENTAGE !== 'false',\n    INCLUDE_ESTIMATES: process.env.GCP_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA:\n      !!process.env.GCP_USE_BILLING_DATA &&\n      process.env.GCP_USE_BILLING_DATA !== 'false',\n    VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT:\n      parseFloat(getEnvVar('GCP_VCPUS_PER_CLOUD_COMPOSER_ENVIRONMENT')) || 14, // Number of vCPUs in medium environment size\n    VCPUS_PER_GKE_CLUSTER:\n      parseFloat(getEnvVar('GCP_VCPUS_PER_GKE_CLUSTER')) || 3, // Number of vCPUs with default node configuration\n    BIG_QUERY_TABLE: getEnvVar('GCP_BIG_QUERY_TABLE') || '',\n    BILLING_PROJECT_ID: getEnvVar('GCP_BILLING_PROJECT_ID') || '',\n    BILLING_PROJECT_NAME: getEnvVar('GCP_BILLING_PROJECT_NAME') || '',\n    CACHE_BUCKET_NAME: getEnvVar('GCS_CACHE_BUCKET_NAME') || '',\n    RESOURCE_TAG_NAMES: JSON.parse(getGCPResourceTagNames()),\n  },\n  AZURE: {\n    INCLUDE_ESTIMATES: process.env.AZURE_INCLUDE_ESTIMATES !== 'false',\n    USE_BILLING_DATA:\n      !!process.env.AZURE_USE_BILLING_DATA &&\n      process.env.AZURE_USE_BILLING_DATA !== 'false',\n    authentication: {\n      mode: getEnvVar('AZURE_AUTH_MODE') || 'default',\n      clientId: getEnvVar('AZURE_CLIENT_ID') || '',\n      clientSecret: getEnvVar('AZURE_CLIENT_SECRET') || '',\n      tenantId: getEnvVar('AZURE_TENANT_ID') || '',\n    },\n    RESOURCE_TAG_NAMES: JSON.parse(getAzureResourceTagNames()),\n    CONSUMPTION_CHUNKS_DAYS: parseInt(\n      getEnvVar('AZURE_CONSUMPTION_CHUNKS_DAYS') || '0',\n    ),\n    SUBSCRIPTION_CHUNKS: parseInt(\n      getEnvVar('AZURE_SUBSCRIPTION_CHUNKS') || '10',\n    ),\n    SUBSCRIPTIONS: JSON.parse(getAzureSubscriptions()) || [],\n  },\n  ALI: {\n    NAME: 'AliCloud',\n    INCLUDE_ESTIMATES: process.env.ALI_INCLUDE_ESTIMATES !== 'false',\n    authentication: {\n      accessKeyId: process.env.ALI_ACCESS_KEY,\n      accessKeySecret: process.env.ALI_ACCESS_SECRET,\n    },\n  },\n  LOGGING_MODE: process.env.LOGGING_MODE || '',\n  CACHE_MODE: getEnvVar('CACHE_MODE') || '',\n  ON_PREMISE: {\n    SERVER: {\n      CPU_UTILIZATION: parseFloat(\n        getEnvVar('ON_PREMISE_CPU_UTILIZATION_SERVER'),\n      ),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_SERVER')),\n    },\n    LAPTOP: {\n      CPU_UTILIZATION: parseFloat(\n        getEnvVar('ON_PREMISE_CPU_UTILIZATION_LAPTOP'),\n      ),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_LAPTOP')),\n    },\n    DESKTOP: {\n      CPU_UTILIZATION: parseFloat(\n        getEnvVar('ON_PREMISE_CPU_UTILIZATION_DESKTOP'),\n      ),\n      AVERAGE_WATTS: parseFloat(getEnvVar('ON_PREMISE_AVG_WATTS_DESKTOP')),\n    },\n  },\n  MONGODB: {\n    URI: getEnvVar('MONGODB_URI') || '',\n    CREDENTIALS: getEnvVar('MONGODB_CREDENTIALS') || '',\n  },\n  ELECTRICITY_MAPS_TOKEN: getEnvVar('ELECTRICITY_MAPS_TOKEN') || '',\n})\n\nexport default getConfig\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}