{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatLogName = exports.assignSeverityToEntries = exports.snakecaseKeys = exports.Severity = void 0;\n/**\n * Common construct and functions used by both Log and LogSync\n */\nconst entry_1 = require(\"../entry\");\nconst extend = require(\"extend\");\nconst arrify = require(\"arrify\");\nvar Severity;\n(function (Severity) {\n  Severity[Severity[\"emergency\"] = 0] = \"emergency\";\n  Severity[Severity[\"alert\"] = 1] = \"alert\";\n  Severity[Severity[\"critical\"] = 2] = \"critical\";\n  Severity[Severity[\"error\"] = 3] = \"error\";\n  Severity[Severity[\"warning\"] = 4] = \"warning\";\n  Severity[Severity[\"notice\"] = 5] = \"notice\";\n  Severity[Severity[\"info\"] = 6] = \"info\";\n  Severity[Severity[\"debug\"] = 7] = \"debug\";\n})(Severity = exports.Severity || (exports.Severity = {}));\n/**\n * snakecaseKeys turns label keys from camel case to snake case.\n * @param labels\n */\nfunction snakecaseKeys(labels) {\n  for (const key in labels) {\n    const replaced = key.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n    Object.defineProperty(labels, replaced, Object.getOwnPropertyDescriptor(labels, key));\n    if (replaced !== key) {\n      delete labels[key];\n    }\n  }\n  return labels;\n}\nexports.snakecaseKeys = snakecaseKeys;\n/**\n * Return an array of log entries with the desired severity assigned.\n *\n * @private\n *\n * @param {object|object[]} entries - Log entries.\n * @param {string} severity - The desired severity level.\n */\nfunction assignSeverityToEntries(entries, severity) {\n  return arrify(entries).map(entry => {\n    const metadata = extend(true, {}, entry.metadata, {\n      severity\n    });\n    return extend(new entry_1.Entry(), entry, {\n      metadata\n    });\n  });\n}\nexports.assignSeverityToEntries = assignSeverityToEntries;\n/**\n * Format the name of a log. A log's full name is in the format of\n * 'projects/{projectId}/logs/{logName}'.\n *\n * @param projectId\n * @param name\n */\nfunction formatLogName(projectId, name) {\n  const path = 'projects/' + projectId + '/logs/';\n  name = name.replace(path, '');\n  if (decodeURIComponent(name) === name) {\n    // The name has not been encoded yet.\n    name = encodeURIComponent(name);\n  }\n  return path + name;\n}\nexports.formatLogName = formatLogName;","map":{"version":3,"names":["entry_1","require","extend","arrify","Severity","exports","snakecaseKeys","labels","key","replaced","replace","letter","toLowerCase","Object","defineProperty","getOwnPropertyDescriptor","assignSeverityToEntries","entries","severity","map","entry","metadata","Entry","formatLogName","projectId","name","path","decodeURIComponent","encodeURIComponent"],"sources":["../../../src/utils/log-common.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA;;;AAIA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,MAAA,GAAAD,OAAA;AACA,MAAAE,MAAA,GAAAF,OAAA;AAUA,IAAYG,QASX;AATD,WAAYA,QAAQ;EAClBA,QAAA,CAAAA,QAAA,gCAAS;EACTA,QAAA,CAAAA,QAAA,wBAAK;EACLA,QAAA,CAAAA,QAAA,8BAAQ;EACRA,QAAA,CAAAA,QAAA,wBAAK;EACLA,QAAA,CAAAA,QAAA,4BAAO;EACPA,QAAA,CAAAA,QAAA,0BAAM;EACNA,QAAA,CAAAA,QAAA,sBAAI;EACJA,QAAA,CAAAA,QAAA,wBAAK;AACP,CAAC,EATWA,QAAQ,GAARC,OAAA,CAAAD,QAAQ,KAARC,OAAA,CAAAD,QAAQ;AAmBpB;;;;AAIA,SAAgBE,aAAaA,CAC3BC,MAAgD;EAEhD,KAAK,MAAMC,GAAG,IAAID,MAAM,EAAE;IACxB,MAAME,QAAQ,GAAGD,GAAG,CAACE,OAAO,CAC1B,QAAQ,EACRC,MAAM,IAAI,IAAIA,MAAM,CAACC,WAAW,EAAE,EAAE,CACrC;IACDC,MAAM,CAACC,cAAc,CACnBP,MAAM,EACNE,QAAQ,EACRI,MAAM,CAACE,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAuB,CACnE;IACD,IAAIC,QAAQ,KAAKD,GAAG,EAAE;MACpB,OAAOD,MAAM,CAACC,GAAG,CAAC;;;EAGtB,OAAOD,MAAM;AACf;AAlBAF,OAAA,CAAAC,aAAA,GAAAA,aAAA;AAoBA;;;;;;;;AAQA,SAAgBU,uBAAuBA,CACrCC,OAAwB,EACxBC,QAAgB;EAEhB,OAAQf,MAAM,CAACc,OAAO,CAAa,CAACE,GAAG,CAACC,KAAK,IAAG;IAC9C,MAAMC,QAAQ,GAAGnB,MAAM,CAAC,IAAI,EAAE,EAAE,EAAEkB,KAAK,CAACC,QAAQ,EAAE;MAChDH;KACD,CAAC;IACF,OAAOhB,MAAM,CAAC,IAAIF,OAAA,CAAAsB,KAAK,EAAE,EAAEF,KAAK,EAAE;MAChCC;KACD,CAAC;EACJ,CAAC,CAAC;AACJ;AAZAhB,OAAA,CAAAW,uBAAA,GAAAA,uBAAA;AAcA;;;;;;;AAOA,SAAgBO,aAAaA,CAACC,SAAiB,EAAEC,IAAY;EAC3D,MAAMC,IAAI,GAAG,WAAW,GAAGF,SAAS,GAAG,QAAQ;EAC/CC,IAAI,GAAGA,IAAI,CAACf,OAAO,CAACgB,IAAI,EAAE,EAAE,CAAC;EAC7B,IAAIC,kBAAkB,CAACF,IAAI,CAAC,KAAKA,IAAI,EAAE;IACrC;IACAA,IAAI,GAAGG,kBAAkB,CAACH,IAAI,CAAC;;EAEjC,OAAOC,IAAI,GAAGD,IAAI;AACpB;AARApB,OAAA,CAAAkB,aAAA,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}