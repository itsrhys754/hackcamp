{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTraceParentHeader = exports.parseXCloudTraceHeader = exports.getContextFromTraceParent = exports.getContextFromXCloudTrace = exports.getOrInjectContext = exports.makeHeaderWrapper = exports.W3C_TRACE_PARENT_HEADER = exports.X_CLOUD_TRACE_HEADER = void 0;\nconst uuid = require(\"uuid\");\nconst crypto = require(\"crypto\");\n/** Header that carries span context across Google infrastructure. */\nexports.X_CLOUD_TRACE_HEADER = 'x-cloud-trace-context';\nconst SPAN_ID_RANDOM_BYTES = 8;\nconst spanIdBuffer = Buffer.alloc(SPAN_ID_RANDOM_BYTES);\nconst randomFillSync = crypto.randomFillSync;\nconst randomBytes = crypto.randomBytes;\nconst spanRandomBuffer = randomFillSync ? () => randomFillSync(spanIdBuffer) : () => randomBytes(SPAN_ID_RANDOM_BYTES);\n/** Header that carries span context across W3C compliant infrastructure. */\nexports.W3C_TRACE_PARENT_HEADER = 'traceparent';\n/**\n * makeHeaderWrapper returns a wrapper with set and get header functionality,\n * returning null if the incoming request object doesn't contain the 'header'\n * propery.\n * @param req\n */\nfunction makeHeaderWrapper(req) {\n  if (!req.headers) return null;\n  const wrapper = {\n    setHeader(name, value) {\n      req.headers[name] = value;\n    },\n    getHeader(name) {\n      return req.headers[name];\n    }\n  };\n  return wrapper;\n}\nexports.makeHeaderWrapper = makeHeaderWrapper;\n/**\n * getOrInjectContext returns a CloudTraceContext with as many available trace\n * and span properties as possible. It examines HTTP headers for trace context.\n * Optionally, it can inject a Google compliant trace context when no context is\n * available from headers.\n *\n * @param req\n * @param projectId\n * @param inject\n */\nfunction getOrInjectContext(req, projectId, inject) {\n  const defaultContext = toCloudTraceContext({}, projectId);\n  const wrapper = makeHeaderWrapper(req);\n  if (wrapper) {\n    // Detect 'traceparent' header.\n    const traceContext = getContextFromTraceParent(wrapper, projectId);\n    if (traceContext) return traceContext;\n    // Detect 'X-Cloud-Trace-Context' header.\n    const cloudContext = getContextFromXCloudTrace(wrapper, projectId);\n    if (cloudContext) return cloudContext;\n    // Optional: Generate and inject a context for the user as last resort.\n    if (inject) {\n      wrapper.setHeader(exports.X_CLOUD_TRACE_HEADER, makeCloudTraceHeader());\n      return getContextFromXCloudTrace(wrapper, projectId);\n    }\n  }\n  return defaultContext;\n}\nexports.getOrInjectContext = getOrInjectContext;\n/**\n * toCloudTraceContext converts any context format to cloudTraceContext format.\n * @param context\n * @param projectId\n */\nfunction toCloudTraceContext(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nanyContext, projectId) {\n  const context = {\n    trace: ''\n  };\n  if (anyContext === null || anyContext === void 0 ? void 0 : anyContext.trace) {\n    context.trace = `projects/${projectId}/traces/${anyContext.trace}`;\n  }\n  if (anyContext === null || anyContext === void 0 ? void 0 : anyContext.spanId) {\n    context.spanId = anyContext.spanId;\n  }\n  if ('traceSampled' in anyContext) {\n    context.traceSampled = anyContext.traceSampled;\n  }\n  return context;\n}\n/**\n * makeCloudTraceHeader generates valid X-Cloud-Trace-Context trace and spanId.\n */\nfunction makeCloudTraceHeader() {\n  const trace = uuid.v4().replace(/-/g, '');\n  const spanId = spanRandomBuffer().toString('hex');\n  return `${trace}/${spanId}`;\n}\n/**\n * getContextFromXCloudTrace looks for the HTTP header 'x-cloud-trace-context'\n * per Google Cloud specifications for Cloud Tracing.\n *\n * @param headerWrapper\n * @param projectId\n */\nfunction getContextFromXCloudTrace(headerWrapper, projectId) {\n  const context = parseXCloudTraceHeader(headerWrapper);\n  if (!context) return null;\n  return toCloudTraceContext(context, projectId);\n}\nexports.getContextFromXCloudTrace = getContextFromXCloudTrace;\n/**\n * getOrInjectTraceParent looks for the HTTP header 'traceparent'\n * per W3C specifications for OpenTelemetry and OpenCensus\n * Read more about W3C protocol: https://www.w3.org/TR/trace-context/\n *\n * @param headerWrapper\n * @param projectId\n */\nfunction getContextFromTraceParent(headerWrapper, projectId) {\n  const context = parseTraceParentHeader(headerWrapper);\n  if (!context) return null;\n  return toCloudTraceContext(context, projectId);\n}\nexports.getContextFromTraceParent = getContextFromTraceParent;\n/**\n * parseXCloudTraceHeader looks for trace context in `X-Cloud-Trace-Context`\n * header\n * @param headerWrapper\n */\nfunction parseXCloudTraceHeader(headerWrapper) {\n  var _a;\n  const regex = /([a-f\\d]+)?(\\/?([a-f\\d]+))?(;?o=(\\d))?/;\n  const match = (_a = headerWrapper.getHeader(exports.X_CLOUD_TRACE_HEADER)) === null || _a === void 0 ? void 0 : _a.toString().match(regex);\n  if (!match) return null;\n  return {\n    trace: match[1],\n    spanId: match[3],\n    traceSampled: match[5] === '1'\n  };\n}\nexports.parseXCloudTraceHeader = parseXCloudTraceHeader;\n/**\n * parseTraceParentHeader is a custom implementation of the `parseTraceParent`\n * function in @opentelemetry-core/trace.\n * For more information see {@link https://www.w3.org/TR/trace-context/}\n * @param headerWrapper\n */\nfunction parseTraceParentHeader(headerWrapper) {\n  var _a;\n  const VERSION_PART = '(?!ff)[\\\\da-f]{2}';\n  const TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\n  const PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\n  const FLAGS_PART = '[\\\\da-f]{2}';\n  const TRACE_PARENT_REGEX = new RegExp(`^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`);\n  const match = (_a = headerWrapper.getHeader(exports.W3C_TRACE_PARENT_HEADER)) === null || _a === void 0 ? void 0 : _a.toString().match(TRACE_PARENT_REGEX);\n  if (!match) return null;\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n  return {\n    trace: match[2],\n    spanId: match[3],\n    traceSampled: (parseInt(match[4], 16) & 1) === 1\n  };\n}\nexports.parseTraceParentHeader = parseTraceParentHeader;","map":{"version":3,"names":["uuid","require","crypto","exports","X_CLOUD_TRACE_HEADER","SPAN_ID_RANDOM_BYTES","spanIdBuffer","Buffer","alloc","randomFillSync","randomBytes","spanRandomBuffer","W3C_TRACE_PARENT_HEADER","makeHeaderWrapper","req","headers","wrapper","setHeader","name","value","getHeader","getOrInjectContext","projectId","inject","defaultContext","toCloudTraceContext","traceContext","getContextFromTraceParent","cloudContext","getContextFromXCloudTrace","makeCloudTraceHeader","anyContext","context","trace","spanId","traceSampled","v4","replace","toString","headerWrapper","parseXCloudTraceHeader","parseTraceParentHeader","regex","match","_a","VERSION_PART","TRACE_ID_PART","PARENT_ID_PART","FLAGS_PART","TRACE_PARENT_REGEX","RegExp","parseInt"],"sources":["../../../src/utils/context.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}